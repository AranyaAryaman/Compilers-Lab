Terminals unused in grammar

   PTR_OP
   LE_OP
   GE_OP
   DO
   AMP
   TILDE
   DOT
   PIPE
   XOR
   QUES
   COLON
   BOOLEAN


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | %empty

    4 declaration: variable_declaration
    5            | function_declaration

    6 variable_declaration: type_specifier ID SEMI
    7                     | type_specifier ID bracket_list SEMI

    8 bracket_list: bracket_list OPEN_SQUARE NUM CLOSED_SQUARE
    9             | OPEN_SQUARE NUM CLOSED_SQUARE

   10 function_declaration: type_specifier ID OPEN_BRACKET parameter_list CLOSED_BRACKET statement_block

   11 statement_block: OPEN_CURLY variable_declarations statement_list CLOSED_CURLY

   12 variable_declarations: variable_declarations variable_declaration
   13                      | %empty

   14 parameter_list: parameter_list COMMA type_specifier ID
   15               | type_specifier ID
   16               | %empty

   17 type_specifier: VOID
   18               | CHAR
   19               | INT
   20               | FLOAT
   21               | BOOL

   22 statement_list: statement_list statement
   23               | %empty

   24 statement: expression_statement
   25          | selection_statement
   26          | iteration_statement
   27          | statement_block
   28          | RETURN SEMI
   29          | RETURN assignment_expression SEMI

   30 primary_expression: id_arr
   31                   | NUM
   32                   | REAL
   33                   | STRING_LITERAL
   34                   | OPEN_BRACKET assignment_expression CLOSED_BRACKET
   35                   | ID OPEN_BRACKET argument_expression_list CLOSED_BRACKET

   36 id_arr: ID
   37       | ID argument_bracket_list

   38 argument_bracket_list: argument_bracket_list OPEN_SQUARE assignment_expression CLOSED_SQUARE
   39                      | OPEN_SQUARE assignment_expression CLOSED_SQUARE

   40 argument_expression_list: argument_expression_list COMMA assignment_expression
   41                         | assignment_expression
   42                         | %empty

   43 unary_expression: primary_expression
   44                 | unary_operator unary_expression

   45 unary_operator: PLUS
   46               | MINUS
   47               | NOT
   48               | DEC_OP
   49               | INC_OP

   50 multiplicative_expression: unary_expression
   51                          | multiplicative_expression STAR unary_expression
   52                          | multiplicative_expression DIVIDE unary_expression
   53                          | multiplicative_expression MODULUS unary_expression

   54 additive_expression: multiplicative_expression
   55                    | additive_expression PLUS multiplicative_expression
   56                    | additive_expression MINUS multiplicative_expression

   57 relational_expression: additive_expression
   58                      | relational_expression LT additive_expression
   59                      | relational_expression GT additive_expression

   60 equality_expression: relational_expression
   61                    | equality_expression EQ_OP relational_expression
   62                    | equality_expression NE_OP relational_expression

   63 logical_and_expression: equality_expression
   64                       | logical_and_expression AND_OP equality_expression

   65 conditional_expression: logical_and_expression
   66                       | conditional_expression OR_OP logical_and_expression

   67 assignment_expression: conditional_expression
   68                      | id_arr ASSIGN assignment_expression

   69 iteration_statement: WHILE OPEN_BRACKET assignment_expression CLOSED_BRACKET statement
   70                    | FOR OPEN_BRACKET expression_statement expression_statement assignment_expression CLOSED_BRACKET statement

   71 selection_statement: IF OPEN_BRACKET assignment_expression CLOSED_BRACKET statement ELSE statement
   72                    | IF OPEN_BRACKET assignment_expression CLOSED_BRACKET statement

   73 expression_statement: SEMI
   74                     | assignment_expression SEMI


Terminals, with rules where they appear

$end (0) 0
error (256)
ELSE (258) 71
FOR (259) 70
IF (260) 71 72
RETURN (261) 28 29
WHILE (262) 69
PTR_OP (263)
INC_OP (264) 49
DEC_OP (265) 48
AND_OP (266) 64
OR_OP (267) 66
LT (268) 58
GT (269) 59
LE_OP (270)
GE_OP (271)
EQ_OP (272) 61
NE_OP (273) 62
DO (274)
NOT (275) 47
AMP (276)
TILDE (277)
STAR (278) 51
ASSIGN (279) 68
OPEN_BRACKET (280) 10 34 35 69 70 71 72
CLOSED_BRACKET (281) 10 34 35 69 70 71 72
OPEN_CURLY (282) 11
CLOSED_CURLY (283) 11
OPEN_SQUARE (284) 8 9 38 39
CLOSED_SQUARE (285) 8 9 38 39
SEMI (286) 6 7 28 29 73 74
COMMA (287) 14 40
DOT (288)
PLUS (289) 45 55
MINUS (290) 46 56
DIVIDE (291) 52
MODULUS (292) 53
PIPE (293)
XOR (294)
QUES (295)
COLON (296)
ID <name> (297) 6 7 10 14 15 35 36 37
BOOL <type> (298) 21
CHAR <type> (299) 18
INT <type> (300) 19
FLOAT <type> (301) 20
VOID <type> (302) 17
NUM <intConst_t> (303) 8 9 31
REAL <doubleConst_t> (304) 32
STRING_LITERAL <stringConst_t> (305) 33
BOOLEAN <boolConst_t> (306)
"UIF" (307)
UPLUS (308)
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
declaration_list (57)
    on left: 2 3, on right: 1 2
declaration <decl> (58)
    on left: 4 5, on right: 2
variable_declaration <varDecl> (59)
    on left: 6 7, on right: 4 12
bracket_list <dimList> (60)
    on left: 8 9, on right: 7 8
function_declaration <funcDecl> (61)
    on left: 10, on right: 5
statement_block <stmtBlock> (62)
    on left: 11, on right: 10 27
variable_declarations <varDecls> (63)
    on left: 12 13, on right: 11 12
parameter_list <parList> (64)
    on left: 14 15 16, on right: 10 14
type_specifier <type> (65)
    on left: 17 18 19 20 21, on right: 6 7 10 14 15
statement_list <stmtList> (66)
    on left: 22 23, on right: 11 22
statement <stmt> (67)
    on left: 24 25 26 27 28 29, on right: 22 69 70 71 72
primary_expression <expr> (68)
    on left: 30 31 32 33 34 35, on right: 43
id_arr <access> (69)
    on left: 36 37, on right: 30 68
argument_bracket_list <argList> (70)
    on left: 38 39, on right: 37 38
argument_expression_list <argList> (71)
    on left: 40 41 42, on right: 35 40
unary_expression <expr> (72)
    on left: 43 44, on right: 44 50 51 52 53
unary_operator <op> (73)
    on left: 45 46 47 48 49, on right: 44
multiplicative_expression <expr> (74)
    on left: 50 51 52 53, on right: 51 52 53 54 55 56
additive_expression <expr> (75)
    on left: 54 55 56, on right: 55 56 57 58 59
relational_expression <expr> (76)
    on left: 57 58 59, on right: 58 59 60 61 62
equality_expression <expr> (77)
    on left: 60 61 62, on right: 61 62 63 64
logical_and_expression <expr> (78)
    on left: 63 64, on right: 64 65 66
conditional_expression <expr> (79)
    on left: 65 66, on right: 66 67
assignment_expression <expr> (80)
    on left: 67 68, on right: 29 34 38 39 40 41 68 69 70 71 72 74
iteration_statement <iterStmt> (81)
    on left: 69 70, on right: 26
selection_statement <selStmt> (82)
    on left: 71 72, on right: 25
expression_statement <exprStmt> (83)
    on left: 73 74, on right: 24 70


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (declaration_list)

    program           go to state 1
    declaration_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    BOOL   shift, and go to state 4
    CHAR   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    VOID   shift, and go to state 8

    $default  reduce using rule 1 (program)

    declaration           go to state 9
    variable_declaration  go to state 10
    function_declaration  go to state 11
    type_specifier        go to state 12


State 3

    0 $accept: program $end .

    $default  accept


State 4

   21 type_specifier: BOOL .

    $default  reduce using rule 21 (type_specifier)


State 5

   18 type_specifier: CHAR .

    $default  reduce using rule 18 (type_specifier)


State 6

   19 type_specifier: INT .

    $default  reduce using rule 19 (type_specifier)


State 7

   20 type_specifier: FLOAT .

    $default  reduce using rule 20 (type_specifier)


State 8

   17 type_specifier: VOID .

    $default  reduce using rule 17 (type_specifier)


State 9

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 10

    4 declaration: variable_declaration .

    $default  reduce using rule 4 (declaration)


State 11

    5 declaration: function_declaration .

    $default  reduce using rule 5 (declaration)


State 12

    6 variable_declaration: type_specifier . ID SEMI
    7                     | type_specifier . ID bracket_list SEMI
   10 function_declaration: type_specifier . ID OPEN_BRACKET parameter_list CLOSED_BRACKET statement_block

    ID  shift, and go to state 13


State 13

    6 variable_declaration: type_specifier ID . SEMI
    7                     | type_specifier ID . bracket_list SEMI
   10 function_declaration: type_specifier ID . OPEN_BRACKET parameter_list CLOSED_BRACKET statement_block

    OPEN_BRACKET  shift, and go to state 14
    OPEN_SQUARE   shift, and go to state 15
    SEMI          shift, and go to state 16

    bracket_list  go to state 17


State 14

   10 function_declaration: type_specifier ID OPEN_BRACKET . parameter_list CLOSED_BRACKET statement_block

    BOOL   shift, and go to state 4
    CHAR   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    VOID   shift, and go to state 8

    $default  reduce using rule 16 (parameter_list)

    parameter_list  go to state 18
    type_specifier  go to state 19


State 15

    9 bracket_list: OPEN_SQUARE . NUM CLOSED_SQUARE

    NUM  shift, and go to state 20


State 16

    6 variable_declaration: type_specifier ID SEMI .

    $default  reduce using rule 6 (variable_declaration)


State 17

    7 variable_declaration: type_specifier ID bracket_list . SEMI
    8 bracket_list: bracket_list . OPEN_SQUARE NUM CLOSED_SQUARE

    OPEN_SQUARE  shift, and go to state 21
    SEMI         shift, and go to state 22


State 18

   10 function_declaration: type_specifier ID OPEN_BRACKET parameter_list . CLOSED_BRACKET statement_block
   14 parameter_list: parameter_list . COMMA type_specifier ID

    CLOSED_BRACKET  shift, and go to state 23
    COMMA           shift, and go to state 24


State 19

   15 parameter_list: type_specifier . ID

    ID  shift, and go to state 25


State 20

    9 bracket_list: OPEN_SQUARE NUM . CLOSED_SQUARE

    CLOSED_SQUARE  shift, and go to state 26


State 21

    8 bracket_list: bracket_list OPEN_SQUARE . NUM CLOSED_SQUARE

    NUM  shift, and go to state 27


State 22

    7 variable_declaration: type_specifier ID bracket_list SEMI .

    $default  reduce using rule 7 (variable_declaration)


State 23

   10 function_declaration: type_specifier ID OPEN_BRACKET parameter_list CLOSED_BRACKET . statement_block

    OPEN_CURLY  shift, and go to state 28

    statement_block  go to state 29


State 24

   14 parameter_list: parameter_list COMMA . type_specifier ID

    BOOL   shift, and go to state 4
    CHAR   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    VOID   shift, and go to state 8

    type_specifier  go to state 30


State 25

   15 parameter_list: type_specifier ID .

    $default  reduce using rule 15 (parameter_list)


State 26

    9 bracket_list: OPEN_SQUARE NUM CLOSED_SQUARE .

    $default  reduce using rule 9 (bracket_list)


State 27

    8 bracket_list: bracket_list OPEN_SQUARE NUM . CLOSED_SQUARE

    CLOSED_SQUARE  shift, and go to state 31


State 28

   11 statement_block: OPEN_CURLY . variable_declarations statement_list CLOSED_CURLY

    $default  reduce using rule 13 (variable_declarations)

    variable_declarations  go to state 32


State 29

   10 function_declaration: type_specifier ID OPEN_BRACKET parameter_list CLOSED_BRACKET statement_block .

    $default  reduce using rule 10 (function_declaration)


State 30

   14 parameter_list: parameter_list COMMA type_specifier . ID

    ID  shift, and go to state 33


State 31

    8 bracket_list: bracket_list OPEN_SQUARE NUM CLOSED_SQUARE .

    $default  reduce using rule 8 (bracket_list)


State 32

   11 statement_block: OPEN_CURLY variable_declarations . statement_list CLOSED_CURLY
   12 variable_declarations: variable_declarations . variable_declaration

    BOOL   shift, and go to state 4
    CHAR   shift, and go to state 5
    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    VOID   shift, and go to state 8

    $default  reduce using rule 23 (statement_list)

    variable_declaration  go to state 34
    type_specifier        go to state 35
    statement_list        go to state 36


State 33

   14 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 14 (parameter_list)


State 34

   12 variable_declarations: variable_declarations variable_declaration .

    $default  reduce using rule 12 (variable_declarations)


State 35

    6 variable_declaration: type_specifier . ID SEMI
    7                     | type_specifier . ID bracket_list SEMI

    ID  shift, and go to state 37


State 36

   11 statement_block: OPEN_CURLY variable_declarations statement_list . CLOSED_CURLY
   22 statement_list: statement_list . statement

    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    RETURN          shift, and go to state 40
    WHILE           shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    OPEN_CURLY      shift, and go to state 28
    CLOSED_CURLY    shift, and go to state 46
    SEMI            shift, and go to state 47
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    statement_block            go to state 54
    statement                  go to state 55
    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68
    expression_statement       go to state 69


State 37

    6 variable_declaration: type_specifier ID . SEMI
    7                     | type_specifier ID . bracket_list SEMI

    OPEN_SQUARE  shift, and go to state 15
    SEMI         shift, and go to state 16

    bracket_list  go to state 17


State 38

   70 iteration_statement: FOR . OPEN_BRACKET expression_statement expression_statement assignment_expression CLOSED_BRACKET statement

    OPEN_BRACKET  shift, and go to state 70


State 39

   71 selection_statement: IF . OPEN_BRACKET assignment_expression CLOSED_BRACKET statement ELSE statement
   72                    | IF . OPEN_BRACKET assignment_expression CLOSED_BRACKET statement

    OPEN_BRACKET  shift, and go to state 71


State 40

   28 statement: RETURN . SEMI
   29          | RETURN . assignment_expression SEMI

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    SEMI            shift, and go to state 72
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 73


State 41

   69 iteration_statement: WHILE . OPEN_BRACKET assignment_expression CLOSED_BRACKET statement

    OPEN_BRACKET  shift, and go to state 74


State 42

   49 unary_operator: INC_OP .

    $default  reduce using rule 49 (unary_operator)


State 43

   48 unary_operator: DEC_OP .

    $default  reduce using rule 48 (unary_operator)


State 44

   47 unary_operator: NOT .

    $default  reduce using rule 47 (unary_operator)


State 45

   34 primary_expression: OPEN_BRACKET . assignment_expression CLOSED_BRACKET

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 75


State 46

   11 statement_block: OPEN_CURLY variable_declarations statement_list CLOSED_CURLY .

    $default  reduce using rule 11 (statement_block)


State 47

   73 expression_statement: SEMI .

    $default  reduce using rule 73 (expression_statement)


State 48

   45 unary_operator: PLUS .

    $default  reduce using rule 45 (unary_operator)


State 49

   46 unary_operator: MINUS .

    $default  reduce using rule 46 (unary_operator)


State 50

   35 primary_expression: ID . OPEN_BRACKET argument_expression_list CLOSED_BRACKET
   36 id_arr: ID .
   37       | ID . argument_bracket_list

    OPEN_BRACKET  shift, and go to state 76
    OPEN_SQUARE   shift, and go to state 77

    $default  reduce using rule 36 (id_arr)

    argument_bracket_list  go to state 78


State 51

   31 primary_expression: NUM .

    $default  reduce using rule 31 (primary_expression)


State 52

   32 primary_expression: REAL .

    $default  reduce using rule 32 (primary_expression)


State 53

   33 primary_expression: STRING_LITERAL .

    $default  reduce using rule 33 (primary_expression)


State 54

   27 statement: statement_block .

    $default  reduce using rule 27 (statement)


State 55

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 56

   43 unary_expression: primary_expression .

    $default  reduce using rule 43 (unary_expression)


State 57

   30 primary_expression: id_arr .
   68 assignment_expression: id_arr . ASSIGN assignment_expression

    ASSIGN  shift, and go to state 79

    $default  reduce using rule 30 (primary_expression)


State 58

   50 multiplicative_expression: unary_expression .

    $default  reduce using rule 50 (multiplicative_expression)


State 59

   44 unary_expression: unary_operator . unary_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression  go to state 56
    id_arr              go to state 80
    unary_expression    go to state 81
    unary_operator      go to state 59


State 60

   51 multiplicative_expression: multiplicative_expression . STAR unary_expression
   52                          | multiplicative_expression . DIVIDE unary_expression
   53                          | multiplicative_expression . MODULUS unary_expression
   54 additive_expression: multiplicative_expression .

    STAR     shift, and go to state 82
    DIVIDE   shift, and go to state 83
    MODULUS  shift, and go to state 84

    $default  reduce using rule 54 (additive_expression)


State 61

   55 additive_expression: additive_expression . PLUS multiplicative_expression
   56                    | additive_expression . MINUS multiplicative_expression
   57 relational_expression: additive_expression .

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86

    $default  reduce using rule 57 (relational_expression)


State 62

   58 relational_expression: relational_expression . LT additive_expression
   59                      | relational_expression . GT additive_expression
   60 equality_expression: relational_expression .

    LT  shift, and go to state 87
    GT  shift, and go to state 88

    $default  reduce using rule 60 (equality_expression)


State 63

   61 equality_expression: equality_expression . EQ_OP relational_expression
   62                    | equality_expression . NE_OP relational_expression
   63 logical_and_expression: equality_expression .

    EQ_OP  shift, and go to state 89
    NE_OP  shift, and go to state 90

    $default  reduce using rule 63 (logical_and_expression)


State 64

   64 logical_and_expression: logical_and_expression . AND_OP equality_expression
   65 conditional_expression: logical_and_expression .

    AND_OP  shift, and go to state 91

    $default  reduce using rule 65 (conditional_expression)


State 65

   66 conditional_expression: conditional_expression . OR_OP logical_and_expression
   67 assignment_expression: conditional_expression .

    OR_OP  shift, and go to state 92

    $default  reduce using rule 67 (assignment_expression)


State 66

   74 expression_statement: assignment_expression . SEMI

    SEMI  shift, and go to state 93


State 67

   26 statement: iteration_statement .

    $default  reduce using rule 26 (statement)


State 68

   25 statement: selection_statement .

    $default  reduce using rule 25 (statement)


State 69

   24 statement: expression_statement .

    $default  reduce using rule 24 (statement)


State 70

   70 iteration_statement: FOR OPEN_BRACKET . expression_statement expression_statement assignment_expression CLOSED_BRACKET statement

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    SEMI            shift, and go to state 47
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression_statement       go to state 94


State 71

   71 selection_statement: IF OPEN_BRACKET . assignment_expression CLOSED_BRACKET statement ELSE statement
   72                    | IF OPEN_BRACKET . assignment_expression CLOSED_BRACKET statement

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 95


State 72

   28 statement: RETURN SEMI .

    $default  reduce using rule 28 (statement)


State 73

   29 statement: RETURN assignment_expression . SEMI

    SEMI  shift, and go to state 96


State 74

   69 iteration_statement: WHILE OPEN_BRACKET . assignment_expression CLOSED_BRACKET statement

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 97


State 75

   34 primary_expression: OPEN_BRACKET assignment_expression . CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 98


State 76

   35 primary_expression: ID OPEN_BRACKET . argument_expression_list CLOSED_BRACKET

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    $default  reduce using rule 42 (argument_expression_list)

    primary_expression         go to state 56
    id_arr                     go to state 57
    argument_expression_list   go to state 99
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 100


State 77

   39 argument_bracket_list: OPEN_SQUARE . assignment_expression CLOSED_SQUARE

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 101


State 78

   37 id_arr: ID argument_bracket_list .
   38 argument_bracket_list: argument_bracket_list . OPEN_SQUARE assignment_expression CLOSED_SQUARE

    OPEN_SQUARE  shift, and go to state 102

    $default  reduce using rule 37 (id_arr)


State 79

   68 assignment_expression: id_arr ASSIGN . assignment_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 103


State 80

   30 primary_expression: id_arr .

    $default  reduce using rule 30 (primary_expression)


State 81

   44 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 44 (unary_expression)


State 82

   51 multiplicative_expression: multiplicative_expression STAR . unary_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression  go to state 56
    id_arr              go to state 80
    unary_expression    go to state 104
    unary_operator      go to state 59


State 83

   52 multiplicative_expression: multiplicative_expression DIVIDE . unary_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression  go to state 56
    id_arr              go to state 80
    unary_expression    go to state 105
    unary_operator      go to state 59


State 84

   53 multiplicative_expression: multiplicative_expression MODULUS . unary_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression  go to state 56
    id_arr              go to state 80
    unary_expression    go to state 106
    unary_operator      go to state 59


State 85

   55 additive_expression: additive_expression PLUS . multiplicative_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 107


State 86

   56 additive_expression: additive_expression MINUS . multiplicative_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 108


State 87

   58 relational_expression: relational_expression LT . additive_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 109


State 88

   59 relational_expression: relational_expression GT . additive_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 110


State 89

   61 equality_expression: equality_expression EQ_OP . relational_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 111


State 90

   62 equality_expression: equality_expression NE_OP . relational_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 112


State 91

   64 logical_and_expression: logical_and_expression AND_OP . equality_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 113


State 92

   66 conditional_expression: conditional_expression OR_OP . logical_and_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 80
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 114


State 93

   74 expression_statement: assignment_expression SEMI .

    $default  reduce using rule 74 (expression_statement)


State 94

   70 iteration_statement: FOR OPEN_BRACKET expression_statement . expression_statement assignment_expression CLOSED_BRACKET statement

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    SEMI            shift, and go to state 47
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression_statement       go to state 115


State 95

   71 selection_statement: IF OPEN_BRACKET assignment_expression . CLOSED_BRACKET statement ELSE statement
   72                    | IF OPEN_BRACKET assignment_expression . CLOSED_BRACKET statement

    CLOSED_BRACKET  shift, and go to state 116


State 96

   29 statement: RETURN assignment_expression SEMI .

    $default  reduce using rule 29 (statement)


State 97

   69 iteration_statement: WHILE OPEN_BRACKET assignment_expression . CLOSED_BRACKET statement

    CLOSED_BRACKET  shift, and go to state 117


State 98

   34 primary_expression: OPEN_BRACKET assignment_expression CLOSED_BRACKET .

    $default  reduce using rule 34 (primary_expression)


State 99

   35 primary_expression: ID OPEN_BRACKET argument_expression_list . CLOSED_BRACKET
   40 argument_expression_list: argument_expression_list . COMMA assignment_expression

    CLOSED_BRACKET  shift, and go to state 118
    COMMA           shift, and go to state 119


State 100

   41 argument_expression_list: assignment_expression .

    $default  reduce using rule 41 (argument_expression_list)


State 101

   39 argument_bracket_list: OPEN_SQUARE assignment_expression . CLOSED_SQUARE

    CLOSED_SQUARE  shift, and go to state 120


State 102

   38 argument_bracket_list: argument_bracket_list OPEN_SQUARE . assignment_expression CLOSED_SQUARE

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 121


State 103

   68 assignment_expression: id_arr ASSIGN assignment_expression .

    $default  reduce using rule 68 (assignment_expression)


State 104

   51 multiplicative_expression: multiplicative_expression STAR unary_expression .

    $default  reduce using rule 51 (multiplicative_expression)


State 105

   52 multiplicative_expression: multiplicative_expression DIVIDE unary_expression .

    $default  reduce using rule 52 (multiplicative_expression)


State 106

   53 multiplicative_expression: multiplicative_expression MODULUS unary_expression .

    $default  reduce using rule 53 (multiplicative_expression)


State 107

   51 multiplicative_expression: multiplicative_expression . STAR unary_expression
   52                          | multiplicative_expression . DIVIDE unary_expression
   53                          | multiplicative_expression . MODULUS unary_expression
   55 additive_expression: additive_expression PLUS multiplicative_expression .

    STAR     shift, and go to state 82
    DIVIDE   shift, and go to state 83
    MODULUS  shift, and go to state 84

    $default  reduce using rule 55 (additive_expression)


State 108

   51 multiplicative_expression: multiplicative_expression . STAR unary_expression
   52                          | multiplicative_expression . DIVIDE unary_expression
   53                          | multiplicative_expression . MODULUS unary_expression
   56 additive_expression: additive_expression MINUS multiplicative_expression .

    STAR     shift, and go to state 82
    DIVIDE   shift, and go to state 83
    MODULUS  shift, and go to state 84

    $default  reduce using rule 56 (additive_expression)


State 109

   55 additive_expression: additive_expression . PLUS multiplicative_expression
   56                    | additive_expression . MINUS multiplicative_expression
   58 relational_expression: relational_expression LT additive_expression .

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86

    $default  reduce using rule 58 (relational_expression)


State 110

   55 additive_expression: additive_expression . PLUS multiplicative_expression
   56                    | additive_expression . MINUS multiplicative_expression
   59 relational_expression: relational_expression GT additive_expression .

    PLUS   shift, and go to state 85
    MINUS  shift, and go to state 86

    $default  reduce using rule 59 (relational_expression)


State 111

   58 relational_expression: relational_expression . LT additive_expression
   59                      | relational_expression . GT additive_expression
   61 equality_expression: equality_expression EQ_OP relational_expression .

    LT  shift, and go to state 87
    GT  shift, and go to state 88

    $default  reduce using rule 61 (equality_expression)


State 112

   58 relational_expression: relational_expression . LT additive_expression
   59                      | relational_expression . GT additive_expression
   62 equality_expression: equality_expression NE_OP relational_expression .

    LT  shift, and go to state 87
    GT  shift, and go to state 88

    $default  reduce using rule 62 (equality_expression)


State 113

   61 equality_expression: equality_expression . EQ_OP relational_expression
   62                    | equality_expression . NE_OP relational_expression
   64 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 89
    NE_OP  shift, and go to state 90

    $default  reduce using rule 64 (logical_and_expression)


State 114

   64 logical_and_expression: logical_and_expression . AND_OP equality_expression
   66 conditional_expression: conditional_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 91

    $default  reduce using rule 66 (conditional_expression)


State 115

   70 iteration_statement: FOR OPEN_BRACKET expression_statement expression_statement . assignment_expression CLOSED_BRACKET statement

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 122


State 116

   71 selection_statement: IF OPEN_BRACKET assignment_expression CLOSED_BRACKET . statement ELSE statement
   72                    | IF OPEN_BRACKET assignment_expression CLOSED_BRACKET . statement

    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    RETURN          shift, and go to state 40
    WHILE           shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    OPEN_CURLY      shift, and go to state 28
    SEMI            shift, and go to state 47
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    statement_block            go to state 54
    statement                  go to state 123
    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68
    expression_statement       go to state 69


State 117

   69 iteration_statement: WHILE OPEN_BRACKET assignment_expression CLOSED_BRACKET . statement

    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    RETURN          shift, and go to state 40
    WHILE           shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    OPEN_CURLY      shift, and go to state 28
    SEMI            shift, and go to state 47
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    statement_block            go to state 54
    statement                  go to state 124
    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68
    expression_statement       go to state 69


State 118

   35 primary_expression: ID OPEN_BRACKET argument_expression_list CLOSED_BRACKET .

    $default  reduce using rule 35 (primary_expression)


State 119

   40 argument_expression_list: argument_expression_list COMMA . assignment_expression

    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 125


State 120

   39 argument_bracket_list: OPEN_SQUARE assignment_expression CLOSED_SQUARE .

    $default  reduce using rule 39 (argument_bracket_list)


State 121

   38 argument_bracket_list: argument_bracket_list OPEN_SQUARE assignment_expression . CLOSED_SQUARE

    CLOSED_SQUARE  shift, and go to state 126


State 122

   70 iteration_statement: FOR OPEN_BRACKET expression_statement expression_statement assignment_expression . CLOSED_BRACKET statement

    CLOSED_BRACKET  shift, and go to state 127


State 123

   71 selection_statement: IF OPEN_BRACKET assignment_expression CLOSED_BRACKET statement . ELSE statement
   72                    | IF OPEN_BRACKET assignment_expression CLOSED_BRACKET statement .

    ELSE  shift, and go to state 128

    $default  reduce using rule 72 (selection_statement)


State 124

   69 iteration_statement: WHILE OPEN_BRACKET assignment_expression CLOSED_BRACKET statement .

    $default  reduce using rule 69 (iteration_statement)


State 125

   40 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 40 (argument_expression_list)


State 126

   38 argument_bracket_list: argument_bracket_list OPEN_SQUARE assignment_expression CLOSED_SQUARE .

    $default  reduce using rule 38 (argument_bracket_list)


State 127

   70 iteration_statement: FOR OPEN_BRACKET expression_statement expression_statement assignment_expression CLOSED_BRACKET . statement

    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    RETURN          shift, and go to state 40
    WHILE           shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    OPEN_CURLY      shift, and go to state 28
    SEMI            shift, and go to state 47
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    statement_block            go to state 54
    statement                  go to state 129
    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68
    expression_statement       go to state 69


State 128

   71 selection_statement: IF OPEN_BRACKET assignment_expression CLOSED_BRACKET statement ELSE . statement

    FOR             shift, and go to state 38
    IF              shift, and go to state 39
    RETURN          shift, and go to state 40
    WHILE           shift, and go to state 41
    INC_OP          shift, and go to state 42
    DEC_OP          shift, and go to state 43
    NOT             shift, and go to state 44
    OPEN_BRACKET    shift, and go to state 45
    OPEN_CURLY      shift, and go to state 28
    SEMI            shift, and go to state 47
    PLUS            shift, and go to state 48
    MINUS           shift, and go to state 49
    ID              shift, and go to state 50
    NUM             shift, and go to state 51
    REAL            shift, and go to state 52
    STRING_LITERAL  shift, and go to state 53

    statement_block            go to state 54
    statement                  go to state 130
    primary_expression         go to state 56
    id_arr                     go to state 57
    unary_expression           go to state 58
    unary_operator             go to state 59
    multiplicative_expression  go to state 60
    additive_expression        go to state 61
    relational_expression      go to state 62
    equality_expression        go to state 63
    logical_and_expression     go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    iteration_statement        go to state 67
    selection_statement        go to state 68
    expression_statement       go to state 69


State 129

   70 iteration_statement: FOR OPEN_BRACKET expression_statement expression_statement assignment_expression CLOSED_BRACKET statement .

    $default  reduce using rule 70 (iteration_statement)


State 130

   71 selection_statement: IF OPEN_BRACKET assignment_expression CLOSED_BRACKET statement ELSE statement .

    $default  reduce using rule 71 (selection_statement)
